{"version":3,"sources":["components/Cell.js","utils/multiply.js","utils/divide.js","utils/calculate/operate.js","utils/calculate/normalize.js","utils/add.js","utils/subtract.js","constants.js","utils/calculate/ungroup.js","utils/calculate/calculate.js","components/Calculate.js","components/Delete.js","components/Input.js","components/Method.js","components/Result.js","components/Blank.js","App.js","serviceWorker.js","index.js"],"names":["Button","styled","button","Cell","className","children","onClick","multiply","a","b","divide","operate","input","reduce","v","TO_NORMALIZE","normalize","result","i","length","includes","j","toNormalizes","splice","item","add","subtract","METHOD_TO_STRING_MAP","GROUP","left","right","patch","value","ungroup","group","pop","shift","calculate","items","filter","console","log","ungrouped","normalized","Calculate","setResult","Input","setInput","Method","fn","Display","div","Result","map","Placeholder","Blank","Layout","takeLast","previousInput","last","lessLast","App","props","state","setValue","bind","setMethod","setDelete","setGroup","this","setState","previousState","deleted","toString","slice","Object","values","newValue","isNaN","Delete","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.34f15193.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  border: 0;\n  width: 75px;\n  margin: 5px;\n  height: 35px;\n  border-radius: 4px;\n  align-items: center;\n  cursor: pointer;\n  \n  &:hover {\n    filter: brightness(0.9);\n  }\n`;\n\nconst Cell = ({\n  className,\n  children,\n  onClick,\n}) => (\n  <Button className={className} onClick={onClick}>\n    {children}\n  </Button>\n);\n\nexport default Cell;\n","const multiply = (a) => (b) => a * b;\n\nexport default multiply;\n","const divide = (a) => (b) => a / b;\n\nexport default divide;\n","const operate = (input) => input\n  .reduce((a, b) => {\n    if (typeof a === 'function') {\n      return a(+b);\n    }\n\n    return b(+a);\n  }, (v) => v);\n\nexport default operate;\n","import multiply from '../multiply';\nimport divide from '../divide';\nimport operate from './operate';\n\nconst TO_NORMALIZE = [multiply, divide];\n\nconst normalize = (input) => {\n  let result = [...input];\n\n  for (let i = 0; i < result.length; i ++) {\n    if (!TO_NORMALIZE.includes(result[i])) {\n      continue;\n    }\n\n    let j = i - 1;\n    const toNormalizes = result.splice(j, 3);\n    const item = operate(toNormalizes);\n    result.splice(j, 0, item);\n    i --;\n  }\n\n  return result;\n};\n\nexport default normalize;\n","const add = (a) => (b) => a + b;\n\nexport default add;","const subtract = (a) => (b) => a - b;\n\nexport default subtract;\n","import add from './utils/add';\nimport divide from './utils/divide';\nimport multiply from './utils/multiply';\nimport subtract from './utils/subtract';\n\nexport const METHOD_TO_STRING_MAP = {\n  [add]: '+',\n  [divide]: '/',\n  [multiply]: '*',\n  [subtract]: '-',\n};\n\nexport const GROUP = {\n  left: '(',\n  right: ')',\n};\n","import { GROUP } from '../../constants';\nimport multiply from '../multiply';\nimport calculate from './calculate';\n\nconst patch = (value) => {\n  if (!value || typeof value === 'function') {\n    return null;\n  }\n\n  return multiply;\n}\n\nconst ungroup = (input) => {\n  let result = [...input];\n\n  for (let i = 0; i < result.length; i ++) {\n    if (result[i] !== GROUP.left) {\n      continue;\n    }\n\n    for (let j = result.length - 1; j > i; j --) {\n      if (result[j] !== GROUP.right) {\n        continue;\n      }\n\n      const group = result.splice(i, j - i + 1);\n      group.pop();\n      group.shift();\n      const item = calculate(group);\n\n      let items = [patch(result[i - 1]), item, patch(result[i])].filter(v => v != null);\n      \n      console.log(result);\n      result.splice(i, 0, ...items);\n\n      break;\n    }\n  }\n\n  return result;\n};\n\nexport default ungroup;\n","import normalize from './normalize';\nimport operate from './operate';\nimport ungroup from './ungroup';\n\nconst calculate = (input) => {\n  console.log('DEBUG: calculate -> input', input);\n  const ungrouped = ungroup(input);\n  console.log('DEBUG: calculate -> ungrouped', ungrouped);\n  const normalized = normalize(ungrouped);\n  console.log('DEBUG: calculate -> normalized', normalized);\n  const result = operate(normalized);\n  console.log('DEBUG: calculate -> result', result);\n\n  return result;\n};\n\nexport default calculate;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Cell from './Cell';\nimport calculate from '../utils/calculate';\n\nconst Button = styled(Cell)`\n  color: white;\n  background: #4285f4;\n`;\n\nconst Calculate = ({ \n  input,\n  setResult,\n}) => (\n  <Button onClick={() => setResult(calculate(input))}>\n    =\n  </Button>\n);\n\nexport default Calculate;\n","import React from 'react';\nimport Cell from './Cell';\n\nconst Input = ({\n  onClick,\n}) => (\n  <Cell onClick={onClick}>\n    CE\n  </Cell>\n);\n\nexport default Input;\n","import React from 'react';\nimport Cell from './Cell';\n\nconst Input = ({\n  value,\n  setInput,\n}) => (\n  <Cell onClick={() => setInput(value)}>\n    {value}\n  </Cell>\n);\n\nexport default Input;\n","import React from 'react';\nimport Cell from './Cell';\nimport { METHOD_TO_STRING_MAP } from '../constants';\n\nconst Method = ({ fn, setInput }) => (\n  <Cell onClick={() => setInput(fn)}>\n    {METHOD_TO_STRING_MAP[fn]}\n  </Cell>\n);\n\nexport default Method;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { METHOD_TO_STRING_MAP } from '../constants';\n\nconst Display = styled.div`\n  border: 0;\n  width: 330px;\n  margin: 5px;\n  height: 50px;\n  font-size: 20px;\n  border-radius: 4px;\n  border: 1px solid #dadada;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: flex-end;\n  padding: 0 10px;\n`;\n\nconst Result = ({\n  result,\n  input,\n}) => (\n  <Display>\n    {input.length ? input.map((i) => {\n      if (typeof i === 'function') {\n        return METHOD_TO_STRING_MAP[i];\n      }\n\n      return i;\n    }) : result}\n  </Display>\n);\n\nexport default Result;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Placeholder = styled.div`\n  width: 75px;\n  margin: 5px;\n  height: 35px;\n`;\n\nconst Blank = () => (\n  <Placeholder />\n);\n\nexport default Blank;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Calculate from './components/Calculate';\nimport Delete from './components/Delete';\nimport Input from './components/Input';\nimport Method from './components/Method';\nimport Result from './components/Result';\nimport Blank from './components/Blank';\nimport add from './utils/add';\nimport divide from './utils/divide';\nimport multiply from './utils/multiply';\nimport subtract from './utils/subtract';\nimport { GROUP } from './constants';\n\nconst Layout = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: 345px;\n  margin: 200px auto;\n  border: 1px solid #dadada;\n  border-radius: 4px;\n`;\n\nconst takeLast = (input) => {\n  const previousInput = [...input];\n  const last = previousInput.pop();\n\n  return { lessLast: previousInput, last }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      // input: ['(', '2', multiply, '3', subtract, '6', multiply, '2', ')', divide, '2'],\n      input: [\"(\", \"(\", \"1\", add, \"2\", \")\", multiply, \"3\", add, \"4\", multiply, \"5\", \")\"],\n      // input: [],\n      result: null,\n    }\n\n    this.setValue = this.setValue.bind(this);\n    this.setMethod = this.setMethod.bind(this);\n    this.setResult = this.setResult.bind(this);\n    this.setDelete = this.setDelete.bind(this);\n    this.setGroup = this.setGroup.bind(this);\n  }\n\n  setGroup(value) {\n    this.setState((previousState) => {\n      const { lessLast, last } = takeLast(previousState.input);\n\n      if (!last) {\n        return {\n          input: [value],\n        };\n      }\n\n      if (typeof last === 'function') {\n        return {\n          input: [...lessLast, last, value],\n        };\n      }\n\n      return {\n        input: [...lessLast, last, value],\n      };\n    })\n  }\n\n  setDelete() {\n    this.setState({\n      result: null,\n    });\n\n    this.setState((previousState) => {\n      const { lessLast, last } = takeLast(previousState.input);\n\n      if (typeof last === 'function') {\n        return {\n          input: lessLast,\n        }\n      }\n\n      const deleted = last.toString().slice(0, -1);\n      \n      if (!deleted) {\n        return {\n          input: lessLast,\n        }\n      }\n      \n      return {\n        input: [...lessLast, deleted],\n      }\n    });\n  }\n\n  setValue(value) {\n    this.setState((previousState) => {\n      const { lessLast, last } = takeLast(previousState.input);\n\n      if (!last) {\n        return {\n          input: [value],\n        }\n      }\n\n      if (typeof last === 'function' || Object.values(GROUP).includes(last)) {\n        return {\n          input: [...lessLast, last, value],\n        }\n      }\n\n      const newValue = `${last}${value}`;\n\n      return {\n        input: [...lessLast, isNaN(newValue) ? last : newValue],\n      }\n    });\n  }\n\n  setMethod(value) {\n    this.setState((previousState) => {\n      const { lessLast, last } = takeLast(previousState.input);\n\n      if (!last) {\n        return previousState;\n      }\n\n      if (last === GROUP.left) {\n        return previousState;\n      }\n\n      if (typeof last === 'function') {\n        return {\n          input: [...lessLast, value],\n        }\n      }\n\n      return {\n        input: [...lessLast, last, value],\n      }\n    });\n  }\n  \n  setResult(result) {\n    this.setState({\n      result,\n      input: [],\n    })\n  }\n\n  render() {\n    const { input, result } = this.state;\n\n    return (\n      <Layout>\n        <Result result={result} input={input} />\n        <Input setInput={this.setGroup} value={GROUP.left} />\n        <Input setInput={this.setGroup} value={GROUP.right} />\n        <Blank />\n        <Delete onClick={this.setDelete} />\n        <Input setInput={this.setValue} value=\"7\" />\n        <Input setInput={this.setValue} value=\"8\" />\n        <Input setInput={this.setValue} value=\"9\" />\n        <Method setInput={this.setMethod} fn={divide} />\n        <Input setInput={this.setValue} value=\"4\" />\n        <Input setInput={this.setValue} value=\"5\" />\n        <Input setInput={this.setValue} value=\"6\" />\n        <Method setInput={this.setMethod} fn={multiply} />\n        <Input setInput={this.setValue} value=\"1\" />\n        <Input setInput={this.setValue} value=\"2\" />\n        <Input setInput={this.setValue} value=\"3\" />\n        <Method setInput={this.setMethod} fn={subtract} />\n        <Input setInput={this.setValue} value=\"0\" />\n        <Input setInput={this.setValue} value=\".\"/>\n        <Calculate setResult={this.setResult} input={input} />\n        <Method setInput={this.setMethod} fn={add} />\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}